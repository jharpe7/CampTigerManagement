@page "/members"
@using CampTiger.Models;
@inject MemberService memberService

<h1> Member Management </h1>
<p> Manage member data.</p>
@if (members == null){
    <p><em> Loading...</em></p>
} else{
  <button @onclick="@Add"  class="btn btn-success">Add</button>
   <table class='table table-hover'>
    <thead>
      <tr>
        <th>ID</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>DOB</th>
        <th>Address</th>
        <th>City</th>
        <th>State</th>
      </tr>
    </thead>
    <tbody> 
     @foreach (var item in members){
         <tr @onclick="@(() => Show(item.MemberId))">
          <td>@item.MemberId</td>
          <td>@item.FirstName</td>
          <td>@item.LastName</td>
          <td>@item.DOB</td>
          <td>@item.Address</td>
          <td>@item.City</td>
          <td>@item.State</td> 
        </tr>
        }
    </tbody>
  </table>
}
@if (members != null && mode==MODE.Add) // Insert form 
{
  <label> Member ID:</label><br>
  <input placeholder="Member Id" @bind ="@memberId" /><br />
  <label> First Name:</label><br>
  <input placeholder="First Name" @bind="@firstName" /><br />
  <label> Last Name:</label><br>
  <input placeholder="Last Name" @bind="@lastName" /><br />
  <label> Password:</label><br>
  <input placeholder="Password" @bind= "@pass" /><br />
  <label> DOB:</label><br>
  <input placeholder="DOB" @bind="@dob" /><br />
  <label> Address:</label><br>
  <input placeholder="Address" @bind="@address" /><br />
  <label> State:</label><br>
  <input placeholder="State" @bind="@state" /><br />
  <label> City:</label><br>
  <input placeholder="City" @bind="@city" /><br />
  <button @onclick="@Insert" class="btn btn-warning">Insert</button>
}
@if (members != null && mode==MODE.EditDelete) // Update & Delete form
{
  <label> Member ID:</label><br>
  <input placeholder="ID" @bind="@memberId" /><br />
  <label> First Name:</label><br>
  <input placeholder="First Name" @bind="@firstName" /><br />
  <label> Last Name:</label><br>
  <input placeholder="Last Name" @bind="@lastName" /><br />
  <label> Password:</label><br>
  <input placeholder="Password" @bind= "@pass" /><br />
  <label> DOB:</label><br>
  <input placeholder="DOB" @bind="@dob" /><br />
  <label> Address:</label><br>
  <input placeholder="Address" @bind="@address" /><br />
  <label> State:</label><br>
  <input placeholder="State" @bind="@state" /><br />
  <label> City:</label><br>
  <input placeholder="City" @bind="@city" /><br />
  <button @onclick="@Update" class="btn btn-primary">Update</button>
  <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
  <button @onclick="@Delete" class="btn btn-danger">Delete</button>
}
@functions {
  List <Member> members;
  int memberId;
  string firstName;
  string lastName;
  string pass;
  string dob;
  string address;
  string city;
  string state;
  private enum MODE { None, Add, EditDelete };
  MODE mode = MODE.None;
  Member member;

  protected override async Task OnInitializedAsync() {
    await load();
  }

  protected async Task load() {
    members = await memberService.GetMembersAsync();
  }
  protected async Task Insert() {

    Member m = new Member() {
    MemberId = memberId,
    FirstName = firstName,
    LastName = lastName,
    Password = pass,
    DOB = dob,
    Address = address,
    City = city,
    State = state
  };

  await memberService.InsertMemberAsync(m);
  ClearFields();
  await load();
  mode = MODE.None;
 }
 protected void ClearFields() {
  
 
  firstName = string.Empty;
  lastName = string.Empty;
  pass = string.Empty;
  dob = string.Empty;
  city = string.Empty;
  state = string.Empty;
}
protected void Add() { 
  ClearFields();
  mode = MODE.Add;
}
protected async Task Update() {

    Member m = new Member() {
    MemberId = memberId,
    FirstName = firstName,
    LastName = lastName,
    Password = pass,
    DOB = dob,
    Address = address,
    City = city,
    State = state
  };

  await memberService.UpdateMemberAsync(memberId, m);
  ClearFields();
  await load();
  mode = MODE.None;
}

protected async Task Delete() {
  await memberService.DeleteMemberAsync(memberId);
  ClearFields();
  await load();
  mode = MODE.None;
}
protected async Task Show(int id) {
  member= await memberService.GetMembersByIdAsync(id);
  memberId = member.MemberId;
  firstName = member.FirstName;
  lastName = member.LastName;
  dob = member.DOB;
  address = member.Address;
  city = member.City;
  state = member.State;
  mode = MODE.EditDelete;
}
}
